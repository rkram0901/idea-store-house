{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\components\\\\QuesAnsDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { useAuthContext } from '../context/auth';\nimport PostedByUser from './PostedByUser';\nimport CommentSection from './CommentSection';\nimport AcceptAnswerButton from './AcceptAnswerButton';\nimport DeleteDialog from './DeleteDialog';\nimport AuthFormModal from './AuthFormModal';\nimport { ReactComponent as AcceptedIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../svg/accepted.svg\";\nimport { Typography, Chip, Button, SvgIcon, TextField } from '@material-ui/core';\nimport { useQuesPageStyles } from '../styles/muiStyles';\n\nconst QuesAnsDetails = ({\n  quesAns,\n  upvoteQuesAns,\n  downvoteQuesAns,\n  editQuesAns,\n  deleteQuesAns,\n  addComment,\n  editComment,\n  deleteComment,\n  acceptAnswer,\n  isAnswer,\n  acceptedAnswer,\n  quesAuthor\n}) => {\n  _s();\n\n  const {\n    id,\n    author,\n    body,\n    tags,\n    comments,\n    points,\n    upvotedBy,\n    downvotedBy,\n    createdAt,\n    updatedAt\n  } = quesAns;\n  const classes = useQuesPageStyles();\n  const {\n    user\n  } = useAuthContext();\n  const [editAnsOpen, setEditAnsOpen] = useState(false);\n  const [editedAnswerBody, setEditedAnswerBody] = useState(body);\n  useEffect(() => {\n    if (isAnswer) {\n      setEditedAnswerBody(body);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [body]);\n\n  const openEditInput = () => {\n    setEditAnsOpen(true);\n  };\n\n  const closeEditInput = () => {\n    setEditAnsOpen(false);\n  };\n\n  const handleAnswerEdit = e => {\n    e.preventDefault();\n    editQuesAns(editedAnswerBody, id);\n    closeEditInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.quesAnsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.voteColumn,\n      children: [user ? /*#__PURE__*/_jsxDEV(UpvoteButton, {\n        checked: user ? upvotedBy.includes(user.id) : false,\n        user: user,\n        handleUpvote: upvoteQuesAns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AuthFormModal, {\n        buttonType: \"upvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"secondary\",\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(DownvoteButton, {\n        checked: user ? downvotedBy.includes(user.id) : false,\n        user: user,\n        handleDownvote: downvoteQuesAns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AuthFormModal, {\n        buttonType: \"downvote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), isAnswer && user && user.id === quesAuthor.id && /*#__PURE__*/_jsxDEV(AcceptAnswerButton, {\n        checked: acceptedAnswer === id,\n        handleAcceptAns: acceptAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), isAnswer && acceptedAnswer === id && (!user || user.id !== quesAuthor.id) && /*#__PURE__*/_jsxDEV(SvgIcon, {\n        className: classes.checkedAcceptIcon,\n        children: /*#__PURE__*/_jsxDEV(AcceptedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.quesBody,\n      children: [!editAnsOpen ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          wordWrap: 'anywhere'\n        },\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.smallForm,\n        onSubmit: handleAnswerEdit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: editedAnswerBody,\n          required: true,\n          fullWidth: true,\n          onChange: e => setEditedAnswerBody(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter at least 30 characters\",\n          variant: \"outlined\",\n          size: \"small\",\n          multiline: true,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.submitCancelBtns,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            size: \"small\",\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              marginRight: 9\n            },\n            children: \"Update Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => setEditAnsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), tags && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tagsWrapper,\n        children: tags.map(t => /*#__PURE__*/_jsxDEV(Chip, {\n          label: t,\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          component: RouterLink,\n          to: `/tags/${t}`,\n          className: classes.tag,\n          clickable: true\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bottomWrapper,\n        children: [!editAnsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.btnsWrapper,\n          children: [user && user.id === author.id && /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            color: \"primary\",\n            variant: \"contained\",\n            style: {\n              marginRight: 6\n            },\n            className: classes.bottomBtns,\n            onClick: isAnswer ? openEditInput : editQuesAns,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), user && (user.id === author.id || user.role === 'ADMIN') && /*#__PURE__*/_jsxDEV(DeleteDialog, {\n            bodyType: isAnswer ? 'answer' : 'question',\n            handleDelete: deleteQuesAns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PostedByUser, {\n          username: author.username,\n          userId: author.id,\n          createdAt: createdAt,\n          updatedAt: updatedAt,\n          filledVariant: true,\n          isAnswer: isAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n        user: user,\n        comments: comments,\n        addComment: addComment,\n        editComment: editComment,\n        deleteComment: deleteComment,\n        quesAnsId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuesAnsDetails, \"So4QH1xjn1b23J+fwgu4ktdQosE=\", false, function () {\n  return [useQuesPageStyles, useAuthContext];\n});\n\n_c = QuesAnsDetails;\nexport default QuesAnsDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuesAnsDetails\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/components/QuesAnsDetails.js"],"names":["useState","useEffect","Link","RouterLink","UpvoteButton","DownvoteButton","useAuthContext","PostedByUser","CommentSection","AcceptAnswerButton","DeleteDialog","AuthFormModal","Typography","Chip","Button","SvgIcon","TextField","useQuesPageStyles","QuesAnsDetails","quesAns","upvoteQuesAns","downvoteQuesAns","editQuesAns","deleteQuesAns","addComment","editComment","deleteComment","acceptAnswer","isAnswer","acceptedAnswer","quesAuthor","id","author","body","tags","comments","points","upvotedBy","downvotedBy","createdAt","updatedAt","classes","user","editAnsOpen","setEditAnsOpen","editedAnswerBody","setEditedAnswerBody","openEditInput","closeEditInput","handleAnswerEdit","e","preventDefault","quesAnsWrapper","voteColumn","includes","checkedAcceptIcon","quesBody","wordWrap","smallForm","target","value","submitCancelBtns","marginRight","tagsWrapper","map","t","tag","bottomWrapper","btnsWrapper","bottomBtns","role","username"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { UpvoteButton, DownvoteButton } from './VoteButtons';\nimport { useAuthContext } from '../context/auth';\nimport PostedByUser from './PostedByUser';\nimport CommentSection from './CommentSection';\nimport AcceptAnswerButton from './AcceptAnswerButton';\nimport DeleteDialog from './DeleteDialog';\nimport AuthFormModal from './AuthFormModal';\nimport { ReactComponent as AcceptedIcon } from '../svg/accepted.svg';\n\nimport {\n  Typography,\n  Chip,\n  Button,\n  SvgIcon,\n  TextField,\n} from '@material-ui/core';\nimport { useQuesPageStyles } from '../styles/muiStyles';\n\nconst QuesAnsDetails = ({\n  quesAns,\n  upvoteQuesAns,\n  downvoteQuesAns,\n  editQuesAns,\n  deleteQuesAns,\n  addComment,\n  editComment,\n  deleteComment,\n  acceptAnswer,\n  isAnswer,\n  acceptedAnswer,\n  quesAuthor,\n}) => {\n  const {\n    id,\n    author,\n    body,\n    tags,\n    comments,\n    points,\n    upvotedBy,\n    downvotedBy,\n    createdAt,\n    updatedAt,\n  } = quesAns;\n\n  const classes = useQuesPageStyles();\n  const { user } = useAuthContext();\n  const [editAnsOpen, setEditAnsOpen] = useState(false);\n  const [editedAnswerBody, setEditedAnswerBody] = useState(body);\n\n  useEffect(() => {\n    if (isAnswer) {\n      setEditedAnswerBody(body);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [body]);\n\n  const openEditInput = () => {\n    setEditAnsOpen(true);\n  };\n\n  const closeEditInput = () => {\n    setEditAnsOpen(false);\n  };\n\n  const handleAnswerEdit = (e) => {\n    e.preventDefault();\n    editQuesAns(editedAnswerBody, id);\n    closeEditInput();\n  };\n\n  return (\n    <div className={classes.quesAnsWrapper}>\n      <div className={classes.voteColumn}>\n        {user ? (\n          <UpvoteButton\n            checked={user ? upvotedBy.includes(user.id) : false}\n            user={user}\n            handleUpvote={upvoteQuesAns}\n          />\n        ) : (\n          <AuthFormModal buttonType=\"upvote\" />\n        )}\n        <Typography variant=\"h6\" color=\"secondary\">\n          {points}\n        </Typography>\n        {user ? (\n          <DownvoteButton\n            checked={user ? downvotedBy.includes(user.id) : false}\n            user={user}\n            handleDownvote={downvoteQuesAns}\n          />\n        ) : (\n          <AuthFormModal buttonType=\"downvote\" />\n        )}\n        {isAnswer && user && user.id === quesAuthor.id && (\n          <AcceptAnswerButton\n            checked={acceptedAnswer === id}\n            handleAcceptAns={acceptAnswer}\n          />\n        )}\n        {isAnswer &&\n          acceptedAnswer === id &&\n          (!user || user.id !== quesAuthor.id) && (\n            <SvgIcon className={classes.checkedAcceptIcon}>\n              <AcceptedIcon />\n            </SvgIcon>\n          )}\n      </div>\n      <div className={classes.quesBody}>\n        {!editAnsOpen ? (\n          <Typography variant=\"body1\" style={{ wordWrap: 'anywhere' }}>\n            {body}\n          </Typography>\n        ) : (\n          <form className={classes.smallForm} onSubmit={handleAnswerEdit}>\n            <TextField\n              value={editedAnswerBody}\n              required\n              fullWidth\n              onChange={(e) => setEditedAnswerBody(e.target.value)}\n              type=\"text\"\n              placeholder=\"Enter at least 30 characters\"\n              variant=\"outlined\"\n              size=\"small\"\n              multiline\n              rows={4}\n            />\n            <div className={classes.submitCancelBtns}>\n              <Button\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginRight: 9 }}\n              >\n                Update Answer\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => setEditAnsOpen(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        )}\n        {tags && (\n          <div className={classes.tagsWrapper}>\n            {tags.map((t) => (\n              <Chip\n                key={t}\n                label={t}\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                component={RouterLink}\n                to={`/tags/${t}`}\n                className={classes.tag}\n                clickable\n              />\n            ))}\n          </div>\n        )}\n        <div className={classes.bottomWrapper}>\n          {!editAnsOpen && (\n            <div className={classes.btnsWrapper}>\n              {user && user.id === author.id && (\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  style={{ marginRight: 6 }}\n                  className={classes.bottomBtns}\n                  onClick={isAnswer ? openEditInput : editQuesAns}\n                >\n                  Edit\n                </Button>\n              )}\n              {user && (user.id === author.id || user.role === 'ADMIN') && (\n                <DeleteDialog\n                  bodyType={isAnswer ? 'answer' : 'question'}\n                  handleDelete={deleteQuesAns}\n                />\n              )}\n            </div>\n          )}\n          <PostedByUser\n            username={author.username}\n            userId={author.id}\n            createdAt={createdAt}\n            updatedAt={updatedAt}\n            filledVariant={true}\n            isAnswer={isAnswer}\n          />\n        </div>\n        <CommentSection\n          user={user}\n          comments={comments}\n          addComment={addComment}\n          editComment={editComment}\n          deleteComment={deleteComment}\n          quesAnsId={id}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default QuesAnsDetails;\n"]},"metadata":{},"sourceType":"module"}