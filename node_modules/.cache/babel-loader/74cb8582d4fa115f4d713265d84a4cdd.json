{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\pages\\\\QuesListPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_QUESTIONS } from \"../graphql/queries\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useStateContext } from \"../context/state\";\nimport { useAuthContext } from \"../context/auth\";\nimport SortQuesBar from \"../components/SortQuesBar\";\nimport QuesCard from \"../components/QuesCard\";\nimport AuthFormModal from \"../components/AuthFormModal\";\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { filterDuplicates, getErrorMsg } from \"../utils/helperFuncs\";\nimport { Typography, Button, Divider, useMediaQuery } from \"@material-ui/core\";\nimport { useQuesListStyles } from \"../styles/muiStyles\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst QuesListPage = ({\n  tagFilterActive,\n  searchFilterActive\n}) => {\n  _s();\n\n  const {\n    tagName,\n    query\n  } = useParams();\n  const {\n    clearEdit,\n    notify\n  } = useStateContext();\n  const {\n    user\n  } = useAuthContext();\n  const [quesData, setQuesData] = useState(null);\n  const [sortBy, setSortBy] = useState(\"HOT\");\n  const [page, setPage] = useState(1);\n  const classes = useQuesListStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [fetchQuestions, {\n    data,\n    loading\n  }] = useLazyQuery(GET_QUESTIONS, {\n    fetchPolicy: \"network-only\",\n    onError: err => {\n      notify(getErrorMsg(err), \"error\");\n    }\n  });\n\n  const getQues = (sortBy, page, limit, filterByTag, filterBySearch) => {\n    fetchQuestions({\n      variables: {\n        sortBy,\n        page,\n        limit,\n        filterByTag,\n        filterBySearch\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQues(sortBy, 1, 12, tagName, query);\n    setPage(1);\n    window.scrollTo(0, 0); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy, tagName, query]);\n  useEffect(() => {\n    if (data && page === 1) {\n      setQuesData(data.getQuestions);\n    }\n\n    if (data && page !== 1) {\n      setQuesData(prevState => ({ ...data.getQuestions,\n        questions: prevState.questions.concat(filterDuplicates(prevState.questions, data.getQuestions.questions))\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [data]);\n\n  const handleLoadPosts = () => {\n    getQues(sortBy, page + 1, 12, tagName, query);\n    setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topBar,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: isMobile ? \"h6\" : \"h5\",\n        color: \"secondary\",\n        style: {\n          wordWrap: \"anywhere\"\n        },\n        children: tagFilterActive ? `Questions tagged [${tagName}]` : searchFilterActive ? `Search results for \"${query}\"` : \"All Ideas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), user ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: isMobile ? \"small\" : \"medium\",\n        component: RouterLink,\n        to: \"/ask\",\n        onClick: () => clearEdit(),\n        style: {\n          minWidth: \"9em\"\n        },\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AuthFormModal, {\n        buttonType: \"ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortQuesBar, {\n      isMobile: isMobile,\n      sortBy: sortBy,\n      setSortBy: setSortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), loading && page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"100%\",\n        marginTop: \"1em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), quesData && (quesData.questions.length !== 0 ? quesData.questions.map(q => /*#__PURE__*/_jsxDEV(QuesCard, {\n      question: q\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"secondary\",\n      variant: \"h6\",\n      className: classes.noQuesText,\n      children: tagFilterActive ? `There are no questions tagged \"${tagName}\".` : searchFilterActive ? `No matches found for your search \"${query}\".` : \"No questions found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)), quesData && quesData.next && /*#__PURE__*/_jsxDEV(LoadMoreButton, {\n      loading: page !== 1 && loading,\n      handleLoadPosts: handleLoadPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuesListPage, \"0Ur9q6fkLWQt5r3FntP/36nm6bo=\", false, function () {\n  return [useParams, useStateContext, useAuthContext, useQuesListStyles, useTheme, useMediaQuery, useLazyQuery];\n});\n\n_c = QuesListPage;\nexport default QuesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuesListPage\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/pages/QuesListPage.js"],"names":["useState","useEffect","useLazyQuery","GET_QUESTIONS","useParams","Link","RouterLink","useStateContext","useAuthContext","SortQuesBar","QuesCard","AuthFormModal","LoadMoreButton","LoadingSpinner","filterDuplicates","getErrorMsg","Typography","Button","Divider","useMediaQuery","useQuesListStyles","useTheme","QuesListPage","tagFilterActive","searchFilterActive","tagName","query","clearEdit","notify","user","quesData","setQuesData","sortBy","setSortBy","page","setPage","classes","theme","isMobile","breakpoints","down","fetchQuestions","data","loading","fetchPolicy","onError","err","getQues","limit","filterByTag","filterBySearch","variables","window","scrollTo","getQuestions","prevState","questions","concat","handleLoadPosts","root","topBar","wordWrap","minWidth","marginTop","length","map","q","id","noQuesText","next"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_QUESTIONS } from \"../graphql/queries\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useStateContext } from \"../context/state\";\nimport { useAuthContext } from \"../context/auth\";\nimport SortQuesBar from \"../components/SortQuesBar\";\nimport QuesCard from \"../components/QuesCard\";\nimport AuthFormModal from \"../components/AuthFormModal\";\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { filterDuplicates, getErrorMsg } from \"../utils/helperFuncs\";\n\nimport { Typography, Button, Divider, useMediaQuery } from \"@material-ui/core\";\nimport { useQuesListStyles } from \"../styles/muiStyles\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst QuesListPage = ({ tagFilterActive, searchFilterActive }) => {\n  const { tagName, query } = useParams();\n  const { clearEdit, notify } = useStateContext();\n  const { user } = useAuthContext();\n  const [quesData, setQuesData] = useState(null);\n  const [sortBy, setSortBy] = useState(\"HOT\");\n  const [page, setPage] = useState(1);\n  const classes = useQuesListStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [fetchQuestions, { data, loading }] = useLazyQuery(GET_QUESTIONS, {\n    fetchPolicy: \"network-only\",\n    onError: (err) => {\n      notify(getErrorMsg(err), \"error\");\n    },\n  });\n\n  const getQues = (sortBy, page, limit, filterByTag, filterBySearch) => {\n    fetchQuestions({\n      variables: { sortBy, page, limit, filterByTag, filterBySearch },\n    });\n  };\n\n  useEffect(() => {\n    getQues(sortBy, 1, 12, tagName, query);\n    setPage(1);\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortBy, tagName, query]);\n\n  useEffect(() => {\n    if (data && page === 1) {\n      setQuesData(data.getQuestions);\n    }\n\n    if (data && page !== 1) {\n      setQuesData((prevState) => ({\n        ...data.getQuestions,\n        questions: prevState.questions.concat(\n          filterDuplicates(prevState.questions, data.getQuestions.questions)\n        ),\n      }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const handleLoadPosts = () => {\n    getQues(sortBy, page + 1, 12, tagName, query);\n    setPage(page + 1);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.topBar}>\n        <Typography\n          variant={isMobile ? \"h6\" : \"h5\"}\n          color=\"secondary\"\n          style={{ wordWrap: \"anywhere\" }}\n        >\n          {tagFilterActive\n            ? `Questions tagged [${tagName}]`\n            : searchFilterActive\n            ? `Search results for \"${query}\"`\n            : \"All Ideas\"}\n        </Typography>\n        {user ? (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size={isMobile ? \"small\" : \"medium\"}\n            component={RouterLink}\n            to=\"/ask\"\n            onClick={() => clearEdit()}\n            style={{ minWidth: \"9em\" }}\n          >\n            Ask Question\n          </Button>\n        ) : (\n          <AuthFormModal buttonType=\"ask\" />\n        )}\n      </div>\n      <SortQuesBar isMobile={isMobile} sortBy={sortBy} setSortBy={setSortBy} />\n      <Divider />\n      {loading && page === 1 && (\n        <div style={{ minWidth: \"100%\", marginTop: \"1em\" }}>\n          <LoadingSpinner size={60} />\n        </div>\n      )}\n      {quesData &&\n        (quesData.questions.length !== 0 ? (\n          quesData.questions.map((q) => <QuesCard key={q.id} question={q} />)\n        ) : (\n          <Typography\n            color=\"secondary\"\n            variant=\"h6\"\n            className={classes.noQuesText}\n          >\n            {tagFilterActive\n              ? `There are no questions tagged \"${tagName}\".`\n              : searchFilterActive\n              ? `No matches found for your search \"${query}\".`\n              : \"No questions found.\"}\n          </Typography>\n        ))}\n      {quesData && quesData.next && (\n        <LoadMoreButton\n          loading={page !== 1 && loading}\n          handleLoadPosts={handleLoadPosts}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default QuesListPage;\n"]},"metadata":{},"sourceType":"module"}