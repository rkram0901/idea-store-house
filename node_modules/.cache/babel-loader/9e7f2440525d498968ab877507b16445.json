{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\pages\\\\UserPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_USER } from \"../graphql/queries\";\nimport RecentQuestions from \"../components/RecentQuestions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { useStateContext } from \"../context/state\";\nimport { formatDateAgo, getErrorMsg } from \"../utils/helperFuncs\";\nimport { Avatar, Typography, Divider } from \"@material-ui/core\";\nimport { useUserPageStyles } from \"../styles/muiStyles\";\n\nconst UserPage = () => {\n  _s();\n\n  const classes = useUserPageStyles();\n  const {\n    notify\n  } = useStateContext();\n  const {\n    username\n  } = useParams();\n  const [fetchedUser, setFetchedUser] = useState(null);\n  const [fetchUser, {\n    data,\n    loading\n  }] = useLazyQuery(GET_USER, {\n    onError: err => {\n      notify(getErrorMsg(err), \"error\");\n    }\n  });\n  useEffect(() => {\n    fetchUser({\n      variables: {\n        username\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username]);\n  useEffect(() => {\n    if (data) {\n      setFetchedUser(data.getUser);\n    }\n  }, [data]);\n\n  if (loading || !fetchedUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minWidth: \"100%\",\n        marginTop: \"20%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    id,\n    username: userName,\n    createdAt,\n    reputation,\n    totalQuestions,\n    totalAnswers,\n    recentQuestions,\n    recentAnswers\n  } = fetchedUser;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.userCard,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://secure.gravatar.com/avatar/${id}?s=164&d=identicon`,\n        alt: username,\n        className: classes.avatar,\n        component: RouterLink,\n        to: `/user/${username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        className: classes.cardText,\n        children: [reputation, \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"REPUTATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"primary\",\n            className: classes.bigText,\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"secondary\",\n            className: classes.smallText,\n            children: [\"member for \", formatDateAgo(createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.statsBar,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginRight: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              className: classes.bigText,\n              children: totalAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"secondary\",\n              className: classes.smallText,\n              children: \"answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              color: \"primary\",\n              className: classes.bigText,\n              children: totalQuestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"secondary\",\n              className: classes.smallText,\n              children: \"questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.recentActivity,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"1em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Last Asked Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), recentQuestions.length !== 0 ? recentQuestions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(RecentQuestions, {\n              question: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"No ideas added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Last Added Ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), recentAnswers.length !== 0 ? recentAnswers.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(RecentQuestions, {\n              question: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, q.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"No ideas added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPage, \"oKQI6rwuJB7VEduxrIBlD6Z7ApU=\", false, function () {\n  return [useUserPageStyles, useStateContext, useParams, useLazyQuery];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/pages/UserPage.js"],"names":["useState","useEffect","useParams","Link","RouterLink","useLazyQuery","GET_USER","RecentQuestions","LoadingSpinner","useStateContext","formatDateAgo","getErrorMsg","Avatar","Typography","Divider","useUserPageStyles","UserPage","classes","notify","username","fetchedUser","setFetchedUser","fetchUser","data","loading","onError","err","variables","getUser","minWidth","marginTop","id","userName","createdAt","reputation","totalQuestions","totalAnswers","recentQuestions","recentAnswers","root","userCard","avatar","cardText","infoCard","userInfo","bigText","smallText","statsBar","marginRight","recentActivity","marginBottom","length","map","q"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_USER } from \"../graphql/queries\";\nimport RecentQuestions from \"../components/RecentQuestions\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { useStateContext } from \"../context/state\";\nimport { formatDateAgo, getErrorMsg } from \"../utils/helperFuncs\";\n\nimport { Avatar, Typography, Divider } from \"@material-ui/core\";\nimport { useUserPageStyles } from \"../styles/muiStyles\";\n\nconst UserPage = () => {\n  const classes = useUserPageStyles();\n  const { notify } = useStateContext();\n  const { username } = useParams();\n  const [fetchedUser, setFetchedUser] = useState(null);\n  const [fetchUser, { data, loading }] = useLazyQuery(GET_USER, {\n    onError: (err) => {\n      notify(getErrorMsg(err), \"error\");\n    },\n  });\n\n  useEffect(() => {\n    fetchUser({ variables: { username } });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username]);\n\n  useEffect(() => {\n    if (data) {\n      setFetchedUser(data.getUser);\n    }\n  }, [data]);\n\n  if (loading || !fetchedUser) {\n    return (\n      <div style={{ minWidth: \"100%\", marginTop: \"20%\" }}>\n        <LoadingSpinner size={80} />\n      </div>\n    );\n  }\n\n  const {\n    id,\n    username: userName,\n    createdAt,\n    reputation,\n    totalQuestions,\n    totalAnswers,\n    recentQuestions,\n    recentAnswers,\n  } = fetchedUser;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.userCard}>\n        <Avatar\n          src={`https://secure.gravatar.com/avatar/${id}?s=164&d=identicon`}\n          alt={username}\n          className={classes.avatar}\n          component={RouterLink}\n          to={`/user/${username}`}\n        />\n        <Typography variant=\"h5\" color=\"secondary\" className={classes.cardText}>\n          {reputation} <Typography variant=\"caption\">REPUTATION</Typography>\n        </Typography>\n      </div>\n      <div className={classes.infoCard}>\n        <div className={classes.userInfo}>\n          <div>\n            <Typography\n              variant=\"h4\"\n              color=\"primary\"\n              className={classes.bigText}\n            >\n              {userName}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              color=\"secondary\"\n              className={classes.smallText}\n            >\n              member for {formatDateAgo(createdAt)}\n            </Typography>\n          </div>\n          <div className={classes.statsBar}>\n            <div style={{ marginRight: 10 }}>\n              <Typography\n                variant=\"h4\"\n                color=\"primary\"\n                className={classes.bigText}\n              >\n                {totalAnswers}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"secondary\"\n                className={classes.smallText}\n              >\n                answers\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"h4\"\n                color=\"primary\"\n                className={classes.bigText}\n              >\n                {totalQuestions}\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"secondary\"\n                className={classes.smallText}\n              >\n                questions\n              </Typography>\n            </div>\n          </div>\n        </div>\n        <Divider />\n        <div className={classes.recentActivity}>\n          <div style={{ marginBottom: \"1em\" }}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Last Asked Questions\n            </Typography>\n            <Divider />\n            {recentQuestions.length !== 0 ? (\n              recentQuestions.map((q) => (\n                <div key={q.id}>\n                  <RecentQuestions question={q} />\n                  <Divider />\n                </div>\n              ))\n            ) : (\n              <Typography variant=\"subtitle1\">No ideas added yet.</Typography>\n            )}\n          </div>\n          <div>\n            <Typography variant=\"h6\" color=\"primary\">\n              Last Added Ideas\n            </Typography>\n            <Divider />\n            {recentAnswers.length !== 0 ? (\n              recentAnswers.map((q) => (\n                <div key={q.id}>\n                  <RecentQuestions question={q} />\n                  <Divider />\n                </div>\n              ))\n            ) : (\n              <Typography variant=\"subtitle1\">No ideas added yet.</Typography>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserPage;\n"]},"metadata":{},"sourceType":"module"}