{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\components\\\\RightSidePanel.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TAGS } from '../graphql/queries';\nimport { Link as RouterLink } from 'react-router-dom';\nimport LoadingSpinner from './LoadingSpinner';\nimport { useStateContext } from '../context/state';\nimport { getErrorMsg } from '../utils/helperFuncs';\nimport { Typography, Chip, useMediaQuery, Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useRightSidePanelStyles } from '../styles/muiStyles';\n\nconst RightSidePanel = () => {\n  _s();\n\n  const classes = useRightSidePanelStyles();\n  const {\n    notify\n  } = useStateContext();\n  const theme = useTheme();\n  const isNotDesktop = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    data,\n    loading\n  } = useQuery(GET_ALL_TAGS, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n  if (isNotDesktop) return null;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rootPanel,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tagsColumn,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"secondary\",\n            children: \"Top Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), !loading && data ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tagsWrapper,\n            children: data.getAllTags.slice(0, 26).map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: t.tagName.length > 13 ? t.tagName.slice(0, 13) + '...' : t.tagName,\n                variant: \"outlined\",\n                color: \"primary\",\n                size: \"small\",\n                component: RouterLink,\n                to: `/tags/${t.tagName}`,\n                className: classes.tag,\n                clickable: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"secondary\",\n                variant: \"caption\",\n                children: ` × ${t.count}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, t.tagName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minWidth: '200px'\n            },\n            children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n              size: 40\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RightSidePanel, \"v+Vp/y9Tq5m2poUgHekMxY7MJDU=\", false, function () {\n  return [useRightSidePanelStyles, useStateContext, useTheme, useMediaQuery, useQuery];\n});\n\n_c = RightSidePanel;\nexport default RightSidePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightSidePanel\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/components/RightSidePanel.js"],"names":["useQuery","GET_ALL_TAGS","Link","RouterLink","LoadingSpinner","useStateContext","getErrorMsg","Typography","Chip","useMediaQuery","Grid","useTheme","useRightSidePanelStyles","RightSidePanel","classes","notify","theme","isNotDesktop","breakpoints","down","data","loading","onError","err","rootPanel","content","tagsColumn","tagsWrapper","getAllTags","slice","map","t","tagName","length","tag","count","minWidth"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { GET_ALL_TAGS } from '../graphql/queries';\nimport { Link as RouterLink } from 'react-router-dom';\nimport LoadingSpinner from './LoadingSpinner';\nimport { useStateContext } from '../context/state';\nimport { getErrorMsg } from '../utils/helperFuncs';\n\nimport { Typography, Chip, useMediaQuery, Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useRightSidePanelStyles } from '../styles/muiStyles';\n\nconst RightSidePanel = () => {\n  const classes = useRightSidePanelStyles();\n  const { notify } = useStateContext();\n  const theme = useTheme();\n  const isNotDesktop = useMediaQuery(theme.breakpoints.down('sm'));\n  const { data, loading } = useQuery(GET_ALL_TAGS, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  if (isNotDesktop) return null;\n\n  return (\n    <Grid item>\n      <div className={classes.rootPanel}>\n        <div className={classes.content}>\n          <div className={classes.tagsColumn}>\n            <Typography variant=\"h6\" color=\"secondary\">\n              Top Tags\n            </Typography>\n            {!loading && data ? (\n              <div className={classes.tagsWrapper}>\n                {data.getAllTags.slice(0, 26).map((t) => (\n                  <div key={t.tagName}>\n                    <Chip\n                      label={\n                        t.tagName.length > 13\n                          ? t.tagName.slice(0, 13) + '...'\n                          : t.tagName\n                      }\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      size=\"small\"\n                      component={RouterLink}\n                      to={`/tags/${t.tagName}`}\n                      className={classes.tag}\n                      clickable\n                    />\n                    <Typography\n                      color=\"secondary\"\n                      variant=\"caption\"\n                    >{` × ${t.count}`}</Typography>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div style={{ minWidth: '200px' }}>\n                <LoadingSpinner size={40} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default RightSidePanel;\n"]},"metadata":{},"sourceType":"module"}