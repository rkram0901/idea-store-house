{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.yupResolver = void 0;\n\nconst react_hook_form_1 = require(\"react-hook-form\");\n\nconst parseErrorSchema = (error, validateAllFieldCriteria) => Array.isArray(error.inner) && error.inner.length ? error.inner.reduce((previous, {\n  path,\n  message,\n  type\n}) => {\n  const previousTypes = previous[path] && previous[path].types || {};\n  const key = path || type;\n  return Object.assign(Object.assign({}, previous), key ? {\n    [key]: Object.assign(Object.assign({}, previous[key] || {\n      message,\n      type\n    }), validateAllFieldCriteria ? {\n      types: Object.assign(Object.assign({}, previousTypes), {\n        [type]: previousTypes[type] ? [...[].concat(previousTypes[type]), message] : message\n      })\n    } : {})\n  } : {});\n}, {}) : {\n  [error.path]: {\n    message: error.message,\n    type: error.type\n  }\n};\n\nexports.yupResolver = (schema, options = {\n  abortEarly: false\n}) => async (values, context, validateAllFieldCriteria = false) => {\n  try {\n    if (options.context && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\"You should not used the yup options context. Please, use the 'useForm' context object instead\");\n    }\n\n    return {\n      values: await schema.validate(values, Object.assign(Object.assign({}, options), {\n        context\n      })),\n      errors: {}\n    };\n  } catch (e) {\n    const parsedErrors = parseErrorSchema(e, validateAllFieldCriteria);\n    return {\n      values: {},\n      errors: react_hook_form_1.transformToNestObject(parsedErrors)\n    };\n  }\n};","map":{"version":3,"sources":["../src/yup.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,MAAM,gBAAgB,GAAG,CACvB,KADuB,EAEvB,wBAFuB,KAIvB,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,KAApB,KAA8B,KAAK,CAAC,KAAN,CAAY,MAA1C,GACI,KAAK,CAAC,KAAN,CAAY,MAAZ,CACE,CAAC,QAAD,EAAgC;AAAE,EAAA,IAAF;AAAQ,EAAA,OAAR;AAAiB,EAAA;AAAjB,CAAhC,KAA2D;AACzD,QAAM,aAAa,GAAI,QAAQ,CAAC,IAAD,CAAR,IAAkB,QAAQ,CAAC,IAAD,CAAR,CAAe,KAAlC,IAA4C,EAAlE;AACA,QAAM,GAAG,GAAG,IAAI,IAAI,IAApB;AAEA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,QADL,CAAA,EAEM,GAAG,GACH;AACE,KAAC,GAAD,GAAK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACC,QAAQ,CAAC,GAAD,CAAR,IAAiB;AACnB,MAAA,OADmB;AAEnB,MAAA;AAFmB,KADlB,CAAA,EAKC,wBAAwB,GACxB;AACE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,aADA,CAAA,EACa;AAChB,SAAC,IAAD,GAAQ,aAAa,CAAC,IAAD,CAAb,GACJ,CAAC,GAAG,GAAG,MAAH,CAAU,aAAa,CAAC,IAAD,CAAvB,CAAJ,EAAoC,OAApC,CADI,GAEJ;AAHY,OADb;AADP,KADwB,GASxB,EAdD;AADP,GADG,GAmBH,EArBN,CAAA;AAuBD,CA5BH,EA6BE,EA7BF,CADJ,GAgCI;AACE,GAAC,KAAK,CAAC,IAAP,GAAc;AAAE,IAAA,OAAO,EAAE,KAAK,CAAC,OAAjB;AAA0B,IAAA,IAAI,EAAE,KAAK,CAAC;AAAtC;AADhB,CApCN;;AAwCa,OAAA,CAAA,WAAA,GAAc,CACzB,MADyB,EAEzB,OAAA,GAAgD;AAC9C,EAAA,UAAU,EAAE;AADkC,CAFvB,KAKE,OAC3B,MAD2B,EAE3B,OAF2B,EAG3B,wBAAwB,GAAG,KAHA,KAIzB;AACF,MAAI;AACF,QACG,OAA+B,CAAC,OAAhC,IACD,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,aAF3B,EAGE;AACA;AACA,MAAA,OAAO,CAAC,IAAR,CACE,+FADF;AAGD;;AACD,WAAO;AACL,MAAA,MAAM,EAAG,MAAM,MAAM,CAAC,QAAP,CAAgB,MAAhB,EAAsB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAChC,OADgC,CAAA,EACzB;AACV,QAAA;AADU,OADyB,CAAtB,CADV;AAKL,MAAA,MAAM,EAAE;AALH,KAAP;AAOD,GAjBD,CAiBE,OAAO,CAAP,EAAU;AACV,UAAM,YAAY,GAAG,gBAAgB,CAAC,CAAD,EAAI,wBAAJ,CAArC;AACA,WAAO;AACL,MAAA,MAAM,EAAE,EADH;AAEL,MAAA,MAAM,EAAE,iBAAA,CAAA,qBAAA,CAAsB,YAAtB;AAFH,KAAP;AAID;AACF,CAlCY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.yupResolver = void 0;\nconst react_hook_form_1 = require(\"react-hook-form\");\nconst parseErrorSchema = (error, validateAllFieldCriteria) => Array.isArray(error.inner) && error.inner.length\n    ? error.inner.reduce((previous, { path, message, type }) => {\n        const previousTypes = (previous[path] && previous[path].types) || {};\n        const key = path || type;\n        return Object.assign(Object.assign({}, previous), (key\n            ? {\n                [key]: Object.assign(Object.assign({}, (previous[key] || {\n                    message,\n                    type,\n                })), (validateAllFieldCriteria\n                    ? {\n                        types: Object.assign(Object.assign({}, previousTypes), { [type]: previousTypes[type]\n                                ? [...[].concat(previousTypes[type]), message]\n                                : message }),\n                    }\n                    : {})),\n            }\n            : {}));\n    }, {})\n    : {\n        [error.path]: { message: error.message, type: error.type },\n    };\nexports.yupResolver = (schema, options = {\n    abortEarly: false,\n}) => async (values, context, validateAllFieldCriteria = false) => {\n    try {\n        if (options.context &&\n            process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            console.warn(\"You should not used the yup options context. Please, use the 'useForm' context object instead\");\n        }\n        return {\n            values: (await schema.validate(values, Object.assign(Object.assign({}, options), { context }))),\n            errors: {},\n        };\n    }\n    catch (e) {\n        const parsedErrors = parseErrorSchema(e, validateAllFieldCriteria);\n        return {\n            values: {},\n            errors: react_hook_form_1.transformToNestObject(parsedErrors),\n        };\n    }\n};\n//# sourceMappingURL=yup.js.map"]},"metadata":{},"sourceType":"script"}