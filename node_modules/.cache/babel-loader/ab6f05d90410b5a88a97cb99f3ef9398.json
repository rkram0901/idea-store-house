{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\components\\\\QuesPageContent.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { VOTE_QUESTION, DELETE_QUESTION, ADD_QUES_COMMENT, EDIT_QUES_COMMENT, DELETE_QUES_COMMENT } from '../graphql/mutations';\nimport { VIEW_QUESTION } from '../graphql/queries';\nimport { useAuthContext } from '../context/auth';\nimport { useStateContext } from '../context/state';\nimport QuesAnsDetails from './QuesAnsDetails';\nimport AnswerList from './AnswerList';\nimport AnswerForm from './AnswerForm';\nimport { upvote, downvote } from '../utils/voteQuesAns';\nimport { getErrorMsg } from '../utils/helperFuncs';\nimport { Divider } from '@material-ui/core';\nimport { useQuesPageStyles } from '../styles/muiStyles';\n\nconst QuesPageContent = ({\n  question\n}) => {\n  _s();\n\n  const {\n    id: quesId,\n    answers,\n    acceptedAnswer,\n    upvotedBy,\n    downvotedBy,\n    title,\n    body,\n    tags,\n    author\n  } = question;\n  const {\n    user\n  } = useAuthContext();\n  const {\n    setEditValues,\n    notify\n  } = useStateContext();\n  const history = useHistory();\n  const classes = useQuesPageStyles();\n  const [submitVote] = useMutation(VOTE_QUESTION, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n  const [removeQuestion] = useMutation(DELETE_QUESTION, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n  const [postQuesComment] = useMutation(ADD_QUES_COMMENT, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n  const [updateQuesComment] = useMutation(EDIT_QUES_COMMENT, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n  const [removeQuesComment] = useMutation(DELETE_QUES_COMMENT, {\n    onError: err => {\n      notify(getErrorMsg(err), 'error');\n    }\n  });\n\n  const upvoteQues = () => {\n    const {\n      updatedUpvotedArr,\n      updatedDownvotedArr,\n      updatedPoints\n    } = upvote(upvotedBy, downvotedBy, user);\n    submitVote({\n      variables: {\n        quesId,\n        voteType: 'UPVOTE'\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        voteQuestion: {\n          __typename: 'Question',\n          id: quesId,\n          upvotedBy: updatedUpvotedArr,\n          downvotedBy: updatedDownvotedArr,\n          points: updatedPoints\n        }\n      }\n    });\n  };\n\n  const downvoteQues = () => {\n    const {\n      updatedUpvotedArr,\n      updatedDownvotedArr,\n      updatedPoints\n    } = downvote(upvotedBy, downvotedBy, user);\n    submitVote({\n      variables: {\n        quesId,\n        voteType: 'DOWNVOTE'\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        voteQuestion: {\n          __typename: 'Question',\n          id: quesId,\n          upvotedBy: updatedUpvotedArr,\n          downvotedBy: updatedDownvotedArr,\n          points: updatedPoints\n        }\n      }\n    });\n  };\n\n  const editQues = () => {\n    setEditValues({\n      quesId,\n      title,\n      body,\n      tags\n    });\n    history.push('/ask');\n  };\n\n  const deleteQues = () => {\n    removeQuestion({\n      variables: {\n        quesId\n      },\n      update: () => {\n        history.push('/');\n        notify('Question deleted!');\n      }\n    });\n  };\n\n  const addQuesComment = commentBody => {\n    postQuesComment({\n      variables: {\n        quesId,\n        body: commentBody\n      },\n      update: (proxy, {\n        data\n      }) => {\n        const dataInCache = proxy.readQuery({\n          query: VIEW_QUESTION,\n          variables: {\n            quesId\n          }\n        });\n        const updatedData = { ...dataInCache.viewQuestion,\n          comments: data.addQuesComment\n        };\n        proxy.writeQuery({\n          query: VIEW_QUESTION,\n          variables: {\n            quesId\n          },\n          data: {\n            viewQuestion: updatedData\n          }\n        });\n        notify('Comment added to question!');\n      }\n    });\n  };\n\n  const editQuesComment = (editedCommentBody, commentId) => {\n    updateQuesComment({\n      variables: {\n        quesId,\n        commentId,\n        body: editedCommentBody\n      },\n      update: () => {\n        notify('Comment edited!');\n      }\n    });\n  };\n\n  const deleteQuesComment = commentId => {\n    removeQuesComment({\n      variables: {\n        quesId,\n        commentId\n      },\n      update: (proxy, {\n        data\n      }) => {\n        const dataInCache = proxy.readQuery({\n          query: VIEW_QUESTION,\n          variables: {\n            quesId\n          }\n        });\n        const filteredComments = dataInCache.viewQuestion.comments.filter(c => c.id !== data.deleteQuesComment);\n        const updatedData = { ...dataInCache.viewQuestion,\n          comments: filteredComments\n        };\n        proxy.writeQuery({\n          query: VIEW_QUESTION,\n          variables: {\n            quesId\n          },\n          data: {\n            viewQuestion: updatedData\n          }\n        });\n        notify('Comment deleted!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(QuesAnsDetails, {\n      quesAns: question,\n      upvoteQuesAns: upvoteQues,\n      downvoteQuesAns: downvoteQues,\n      editQuesAns: editQues,\n      deleteQuesAns: deleteQues,\n      addComment: addQuesComment,\n      editComment: editQuesComment,\n      deleteComment: deleteQuesComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnswerList, {\n      quesId: quesId,\n      answers: answers,\n      acceptedAnswer: acceptedAnswer,\n      quesAuthor: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnswerForm, {\n      quesId: quesId,\n      tags: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuesPageContent, \"ugyIukNBuc2D5xSvnxaXMbtDBx8=\", false, function () {\n  return [useAuthContext, useStateContext, useHistory, useQuesPageStyles, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\n\n_c = QuesPageContent;\nexport default QuesPageContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuesPageContent\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/components/QuesPageContent.js"],"names":["useHistory","useMutation","VOTE_QUESTION","DELETE_QUESTION","ADD_QUES_COMMENT","EDIT_QUES_COMMENT","DELETE_QUES_COMMENT","VIEW_QUESTION","useAuthContext","useStateContext","QuesAnsDetails","AnswerList","AnswerForm","upvote","downvote","getErrorMsg","Divider","useQuesPageStyles","QuesPageContent","question","id","quesId","answers","acceptedAnswer","upvotedBy","downvotedBy","title","body","tags","author","user","setEditValues","notify","history","classes","submitVote","onError","err","removeQuestion","postQuesComment","updateQuesComment","removeQuesComment","upvoteQues","updatedUpvotedArr","updatedDownvotedArr","updatedPoints","variables","voteType","optimisticResponse","__typename","voteQuestion","points","downvoteQues","editQues","push","deleteQues","update","addQuesComment","commentBody","proxy","data","dataInCache","readQuery","query","updatedData","viewQuestion","comments","writeQuery","editQuesComment","editedCommentBody","commentId","deleteQuesComment","filteredComments","filter","c","content"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport {\n  VOTE_QUESTION,\n  DELETE_QUESTION,\n  ADD_QUES_COMMENT,\n  EDIT_QUES_COMMENT,\n  DELETE_QUES_COMMENT,\n} from '../graphql/mutations';\nimport { VIEW_QUESTION } from '../graphql/queries';\nimport { useAuthContext } from '../context/auth';\nimport { useStateContext } from '../context/state';\nimport QuesAnsDetails from './QuesAnsDetails';\nimport AnswerList from './AnswerList';\nimport AnswerForm from './AnswerForm';\nimport { upvote, downvote } from '../utils/voteQuesAns';\nimport { getErrorMsg } from '../utils/helperFuncs';\n\nimport { Divider } from '@material-ui/core';\nimport { useQuesPageStyles } from '../styles/muiStyles';\n\nconst QuesPageContent = ({ question }) => {\n  const {\n    id: quesId,\n    answers,\n    acceptedAnswer,\n    upvotedBy,\n    downvotedBy,\n    title,\n    body,\n    tags,\n    author,\n  } = question;\n\n  const { user } = useAuthContext();\n  const { setEditValues, notify } = useStateContext();\n  const history = useHistory();\n  const classes = useQuesPageStyles();\n\n  const [submitVote] = useMutation(VOTE_QUESTION, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  const [removeQuestion] = useMutation(DELETE_QUESTION, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  const [postQuesComment] = useMutation(ADD_QUES_COMMENT, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  const [updateQuesComment] = useMutation(EDIT_QUES_COMMENT, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  const [removeQuesComment] = useMutation(DELETE_QUES_COMMENT, {\n    onError: (err) => {\n      notify(getErrorMsg(err), 'error');\n    },\n  });\n\n  const upvoteQues = () => {\n    const { updatedUpvotedArr, updatedDownvotedArr, updatedPoints } = upvote(\n      upvotedBy,\n      downvotedBy,\n      user\n    );\n\n    submitVote({\n      variables: { quesId, voteType: 'UPVOTE' },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        voteQuestion: {\n          __typename: 'Question',\n          id: quesId,\n          upvotedBy: updatedUpvotedArr,\n          downvotedBy: updatedDownvotedArr,\n          points: updatedPoints,\n        },\n      },\n    });\n  };\n\n  const downvoteQues = () => {\n    const { updatedUpvotedArr, updatedDownvotedArr, updatedPoints } = downvote(\n      upvotedBy,\n      downvotedBy,\n      user\n    );\n\n    submitVote({\n      variables: { quesId, voteType: 'DOWNVOTE' },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        voteQuestion: {\n          __typename: 'Question',\n          id: quesId,\n          upvotedBy: updatedUpvotedArr,\n          downvotedBy: updatedDownvotedArr,\n          points: updatedPoints,\n        },\n      },\n    });\n  };\n\n  const editQues = () => {\n    setEditValues({ quesId, title, body, tags });\n    history.push('/ask');\n  };\n\n  const deleteQues = () => {\n    removeQuestion({\n      variables: { quesId },\n      update: () => {\n        history.push('/');\n        notify('Question deleted!');\n      },\n    });\n  };\n\n  const addQuesComment = (commentBody) => {\n    postQuesComment({\n      variables: { quesId, body: commentBody },\n      update: (proxy, { data }) => {\n        const dataInCache = proxy.readQuery({\n          query: VIEW_QUESTION,\n          variables: { quesId },\n        });\n\n        const updatedData = {\n          ...dataInCache.viewQuestion,\n          comments: data.addQuesComment,\n        };\n\n        proxy.writeQuery({\n          query: VIEW_QUESTION,\n          variables: { quesId },\n          data: { viewQuestion: updatedData },\n        });\n\n        notify('Comment added to question!');\n      },\n    });\n  };\n\n  const editQuesComment = (editedCommentBody, commentId) => {\n    updateQuesComment({\n      variables: { quesId, commentId, body: editedCommentBody },\n      update: () => {\n        notify('Comment edited!');\n      },\n    });\n  };\n\n  const deleteQuesComment = (commentId) => {\n    removeQuesComment({\n      variables: { quesId, commentId },\n      update: (proxy, { data }) => {\n        const dataInCache = proxy.readQuery({\n          query: VIEW_QUESTION,\n          variables: { quesId },\n        });\n\n        const filteredComments = dataInCache.viewQuestion.comments.filter(\n          (c) => c.id !== data.deleteQuesComment\n        );\n\n        const updatedData = {\n          ...dataInCache.viewQuestion,\n          comments: filteredComments,\n        };\n\n        proxy.writeQuery({\n          query: VIEW_QUESTION,\n          variables: { quesId },\n          data: { viewQuestion: updatedData },\n        });\n\n        notify('Comment deleted!');\n      },\n    });\n  };\n\n  return (\n    <div className={classes.content}>\n      <QuesAnsDetails\n        quesAns={question}\n        upvoteQuesAns={upvoteQues}\n        downvoteQuesAns={downvoteQues}\n        editQuesAns={editQues}\n        deleteQuesAns={deleteQues}\n        addComment={addQuesComment}\n        editComment={editQuesComment}\n        deleteComment={deleteQuesComment}\n      />\n      <Divider />\n      <AnswerList\n        quesId={quesId}\n        answers={answers}\n        acceptedAnswer={acceptedAnswer}\n        quesAuthor={author}\n      />\n      <AnswerForm quesId={quesId} tags={tags} />\n    </div>\n  );\n};\n\nexport default QuesPageContent;\n"]},"metadata":{},"sourceType":"module"}