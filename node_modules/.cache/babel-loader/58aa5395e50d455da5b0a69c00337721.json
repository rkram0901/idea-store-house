{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\components\\\\ToastNotification.js\",\n    _s = $RefreshSig$();\n\nimport { useStateContext } from '../context/state';\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst ToastNotification = () => {\n  _s();\n\n  const {\n    notification,\n    clearNotif\n  } = useStateContext();\n\n  if (!(notification === null || notification === void 0 ? void 0 : notification.message)) {\n    return null;\n  }\n\n  const {\n    message,\n    severity\n  } = notification;\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: !!notification,\n    onClose: () => clearNotif(),\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: () => clearNotif(),\n      severity: severity,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToastNotification, \"jLDPjB9qqBrgyuQ8mH5FRId3ItI=\", false, function () {\n  return [useStateContext];\n});\n\n_c = ToastNotification;\nexport default ToastNotification;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastNotification\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/components/ToastNotification.js"],"names":["useStateContext","Snackbar","Alert","ToastNotification","notification","clearNotif","message","severity","vertical","horizontal"],"mappings":";;;;;AAAA,SAASA,eAAT,QAAgC,kBAAhC;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BL,eAAe,EAApD;;AAEA,MAAI,EAACI,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEE,OAAf,CAAJ,EAA4B;AAC1B,WAAO,IAAP;AACD;;AAED,QAAM;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBH,YAA9B;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAE,CAAC,CAACA,YADV;AAEE,IAAA,OAAO,EAAE,MAAMC,UAAU,EAF3B;AAGE,IAAA,YAAY,EAAE;AAAEG,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAHhB;AAAA,2BAKE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAMJ,UAAU,EAAhC;AAAoC,MAAA,QAAQ,EAAEE,QAA9C;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;GAAMH,iB;UACiCH,e;;;KADjCG,iB;AAsBN,eAAeA,iBAAf","sourcesContent":["import { useStateContext } from '../context/state';\n\nimport { Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nconst ToastNotification = () => {\n  const { notification, clearNotif } = useStateContext();\n\n  if (!notification?.message) {\n    return null;\n  }\n\n  const { message, severity } = notification;\n\n  return (\n    <Snackbar\n      open={!!notification}\n      onClose={() => clearNotif()}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n    >\n      <Alert onClose={() => clearNotif()} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ToastNotification;\n"]},"metadata":{},"sourceType":"module"}