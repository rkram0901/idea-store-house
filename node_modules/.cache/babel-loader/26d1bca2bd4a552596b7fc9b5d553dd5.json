{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Projects\\\\Hackathon\\\\stack-underflow-master\\\\client\\\\src\\\\components\\\\QuesCard.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport PostedByUser from './PostedByUser';\nimport { Paper, Typography, Chip } from '@material-ui/core';\nimport { useQuesCardStyles } from '../styles/muiStyles';\n\nconst QuesCard = ({\n  question\n}) => {\n  _s();\n\n  const classes = useQuesCardStyles();\n  const {\n    id,\n    title,\n    author,\n    body,\n    tags,\n    points,\n    views,\n    answerCount,\n    createdAt\n  } = question;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 0,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.innerInfo,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.mainText,\n          children: points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.innerInfo,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.mainText,\n          children: answerCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        noWrap: true,\n        children: [views, \" views\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.quesDetails,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"secondary\",\n        className: classes.title,\n        component: RouterLink,\n        to: `/questions/${id}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        style: {\n          wordWrap: 'anywhere'\n        },\n        children: body.length > 150 ? body.slice(0, 150) + '...' : body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bottomWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tagsWrapper,\n          children: tags.map(t => /*#__PURE__*/_jsxDEV(Chip, {\n            label: t,\n            variant: \"outlined\",\n            color: \"primary\",\n            size: \"small\",\n            component: RouterLink,\n            to: `/tags/${t}`,\n            className: classes.tag,\n            clickable: true\n          }, t, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostedByUser, {\n          username: author.username,\n          userId: author.id,\n          createdAt: createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuesCard, \"nQvY3/WdrHzyYXQL2F/lNV28HCo=\", false, function () {\n  return [useQuesCardStyles];\n});\n\n_c = QuesCard;\nexport default QuesCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuesCard\");","map":{"version":3,"sources":["C:/Projects/Hackathon/stack-underflow-master/client/src/components/QuesCard.js"],"names":["Link","RouterLink","PostedByUser","Paper","Typography","Chip","useQuesCardStyles","QuesCard","question","classes","id","title","author","body","tags","points","views","answerCount","createdAt","root","infoWrapper","innerInfo","mainText","quesDetails","wordWrap","length","slice","bottomWrapper","tagsWrapper","map","t","tag","username"],"mappings":"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","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport PostedByUser from './PostedByUser';\n\nimport { Paper, Typography, Chip } from '@material-ui/core';\nimport { useQuesCardStyles } from '../styles/muiStyles';\n\nconst QuesCard = ({ question }) => {\n  const classes = useQuesCardStyles();\n\n  const {\n    id,\n    title,\n    author,\n    body,\n    tags,\n    points,\n    views,\n    answerCount,\n    createdAt,\n  } = question;\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <div className={classes.infoWrapper}>\n        <div className={classes.innerInfo}>\n          <Typography variant=\"body2\" className={classes.mainText}>\n            {points}\n          </Typography>\n          <Typography variant=\"caption\">votes</Typography>\n        </div>\n        <div className={classes.innerInfo}>\n          <Typography variant=\"body2\" className={classes.mainText}>\n            {answerCount}\n          </Typography>\n          <Typography variant=\"caption\">answers</Typography>\n        </div>\n        <Typography variant=\"caption\" noWrap>\n          {views} views\n        </Typography>\n      </div>\n      <div className={classes.quesDetails}>\n        <Typography\n          variant=\"body2\"\n          color=\"secondary\"\n          className={classes.title}\n          component={RouterLink}\n          to={`/questions/${id}`}\n        >\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" style={{ wordWrap: 'anywhere' }}>\n          {body.length > 150 ? body.slice(0, 150) + '...' : body}\n        </Typography>\n        <div className={classes.bottomWrapper}>\n          <div className={classes.tagsWrapper}>\n            {tags.map((t) => (\n              <Chip\n                key={t}\n                label={t}\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                component={RouterLink}\n                to={`/tags/${t}`}\n                className={classes.tag}\n                clickable\n              />\n            ))}\n          </div>\n          <PostedByUser\n            username={author.username}\n            userId={author.id}\n            createdAt={createdAt}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default QuesCard;\n"]},"metadata":{},"sourceType":"module"}